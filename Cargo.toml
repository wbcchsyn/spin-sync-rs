[package]
name = "spin-sync"
version = "0.2.0"
authors = ["Yoshida Shin <wbcchsyn@gmail.com>"]
edition = "2018"

description = """
Synchronization primitives using spinlock.
The interface resembles std::sync.
The constructors of public structs are const; i.e. it is possible to declare static Mutex<T> as long as T can be build statically.
"""

readme = "README.md"
keywords = ["spin", "lock", "sync", "mutex", "spin_lock"]
documentation = "https://wbcchsyn.github.io/spin-sync-rs/spin_sync/index.html"

license = "MIT"

repository = "https://github.com/wbcchsyn/spin-sync-rs.git"

[badges]
circle-ci = { repository = "wbcchsyn/spin-sync-rs" }
travis-ci = { repository = "wbcchsyn/spin-sync-rs" }

[dependencies]
