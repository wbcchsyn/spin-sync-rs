initSidebarItems({"struct":[["Barrier","A barrier enables multiple threads to synchronize the beginning of some computation."],["BarrierWaitResult",""],["Mutex","A mutual exclusion primitive useful for protecting shared data."],["MutexGuard","An RAII implementation of a \"scoped lock\" of a mutex."],["Once","A synchronization primitive which can be used to run a one-time global initialization."],["OnceState","State yielded to [`call_once_force`] â€™s closure parameter. The state can be used to query the poison status of the [`Once`]"],["RwLock","A reader-writer lock."],["RwLockReadGuard","An RAII implementation of a \"scoped shared read lock\" of a RwLock."],["RwLockWriteGuard","An RAII implementation of a \"scoped exclusive write lock\" of a RwLock."]],"type":[["LockResult","Alias to std::sync::LockResult."],["PoisonError","Alias to std::sync::PoisonError"],["TryLockError","Alias to std::sync::TryLockError"],["TryLockResult","Alias to std::sync::TryLockResult"]]});