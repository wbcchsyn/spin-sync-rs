var searchIndex = JSON.parse('{\
"spin_sync":{"doc":"CircleCI Build Status","i":[[3,"Barrier","spin_sync","A barrier enables multiple threads to synchronize the…",null,null],[3,"BarrierWaitResult","","",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[3,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex.",null,null],[3,"Mutex8","","`Mutex8` is a set of mutexes. Each instance includes 8…",null,null],[3,"Mutex8Guard","","An RAII implementation of a \\\"scoped lock(s)\\\" of a `Mutex8` .",null,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[3,"OnceState","","State yielded to `call_once_force` ’s closure parameter.…",null,null],[3,"RwLock","","A reader-writer lock.",null,null],[3,"RwLockReadGuard","","An RAII implementation of a \\\"scoped shared read lock\\\" of a…",null,null],[3,"RwLockWriteGuard","","An RAII implementation of a \\\"scoped exclusive write lock\\\"…",null,null],[11,"new","","Creates a new barrier that can block a given number of…",0,[[]]],[11,"wait","","Blocks the current thread until all threads have…",0,[[],["barrierwaitresult",3]]],[11,"is_leader","","Returns `true` if this thread from `wait` is the \\\"leader…",1,[[]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",2,[[]]],[11,"into_inner","","Consumes this mutex and returns the underlying data.",2,[[],["lockresult",6]]],[11,"lock","","Blocks the current thread until acquiring the lock, and…",2,[[],[["lockresult",6],["mutexguard",3]]]],[11,"try_lock","","Attempts to acquire this lock and returns an RAII guard…",2,[[],[["trylockresult",6],["mutexguard",3]]]],[11,"is_poisoned","","Determines whether the mutex is poisoned or not.",2,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",2,[[],["lockresult",6]]],[11,"new","","Creates a new instance in an unlocked state ready for use.",3,[[]]],[11,"lock","","Blocks the current thread until acquiring the lock(s)…",3,[[],["mutex8guard",3]]],[11,"try_lock","","Attempts to acquire lock(s) indicated by `lock_bits` and…",3,[[],[["trylockresult",6],["mutex8guard",3]]]],[11,"locked_bits","","Returns the bits that some [`Mutex8Guard`] instance(s) is…",3,[[]]],[11,"release","","Releases the lock(s) partially indicated by `lock_bits` .",4,[[]]],[11,"lock_bits","","Returns the bits that `self` is holding.",4,[[]]],[11,"new","","Create a new `Once` instance.",5,[[]]],[11,"call_once","","Performs an initialization routine once and only once. The…",5,[[["fnonce",8]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",5,[[["fnonce",8]]]],[11,"is_completed","","Returns true if some `call_once` call has completed…",5,[[]]],[11,"poisoned","","Returns true if the associated `Once` was poisoned prior…",6,[[]]],[11,"new","","Creates a new instance in unlocked state ready for use.",7,[[]]],[11,"into_inner","","Consumes this instance and returns the underlying data.",7,[[],["lockresult",6]]],[18,"MAX_READ_LOCK_COUNT","","The maximum shared read locks of each instance.",7,null],[11,"read","","Blocks the current thread until acquiring a shared read…",7,[[],[["lockresult",6],["rwlockreadguard",3]]]],[11,"try_read","","Attempts to acquire a shared read lock and returns an RAII…",7,[[],[["rwlockreadguard",3],["trylockresult",6]]]],[11,"try_write","","Attempts to acquire the exclusive write lock and returns…",7,[[],[["trylockresult",6],["rwlockwriteguard",3]]]],[11,"write","","Blocks the current thread until acquiring the exclusive…",7,[[],[["lockresult",6],["rwlockwriteguard",3]]]],[11,"is_poisoned","","Determines whether the lock is poisoned or not.",7,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",7,[[],["lockresult",6]]],[6,"LockResult","","Alias to std::sync::LockResult.",null,null],[6,"PoisonError","","Alias to std::sync::PoisonError",null,null],[6,"TryLockError","","Alias to std::sync::TryLockError",null,null],[6,"TryLockResult","","Alias to std::sync::TryLockResult",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","","",8,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","Make sure to release the shared read lock. This function…",9,[[]]],[11,"drop","","Make sure to release the exclusive write lock.",10,[[]]],[11,"from","","",2,[[]]],[11,"from","","",7,[[]]],[11,"default","","",2,[[]]],[11,"default","","",7,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",8,[[]]],[11,"deref_mut","","",10,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]]],"p":[[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Mutex"],[3,"Mutex8"],[3,"Mutex8Guard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"MutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);